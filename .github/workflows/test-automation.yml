name: Test Automation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 수동 실행 옵션

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Create necessary directories and files
      run: |
        mkdir -p cases reports tests
        touch tests/__init__.py
        
        # Create test cases
        echo '{
          "name": "덧셈 테스트",
          "description": "두 숫자 덧셈을 테스트합니다",
          "test_function": "add_test",
          "parameters": {
            "a": 5,
            "b": 3,
            "expected": 8
          }
        }' > cases/addition_test.json
        
        echo '{
          "name": "곱셈 테스트",
          "description": "두 숫자 곱셈을 테스트합니다",
          "test_function": "multiply_test",
          "parameters": {
            "a": 4,
            "b": 5,
            "expected": 20
          }
        }' > cases/multiplication_test.json
    
    - name: Copy test functions
      run: |
        cp tests/functions.py tests/functions.py.bak || true
        cp $GITHUB_WORKSPACE/tests/functions.py tests/functions.py
    
    - name: Run tests
      run: python run_tests.py
    
    - name: Debug reports directory
      run: |
        echo "Contents of reports directory:"
        ls -la reports/
    
    - name: Upload test results
      uses: actions/upload-artifact@v3.1.3
      with:
        name: test-results
        path: ${{ github.workspace }}/reports/
        retention-days: 5
        if-no-files-found: warn 